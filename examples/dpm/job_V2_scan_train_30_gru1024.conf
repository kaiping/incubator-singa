name: "dpm"
# To scan the training data + validation data 30 time, training data + validation data: 1376 samples
train_steps:41310
# To scan the test data once, test data: 153 samples
test_steps:153
test_freq:1376
disp_freq:1376
#gpu: 0

train_one_batch {
  alg: kBPTT
}

updater {
  type: kRMSProp
  rmsprop_conf {
    rho: 0.95
  }
  learning_rate {
    type: kStep
    base_lr: 0.002
    step_conf {
      gamma: 0.97
      change_freq: 2000
    }
  }
  clip_low: -5
  clip_high: 5
}

neuralnet {

unroll_len:10 

layer {
  name: "data"
  user_type: "kData"
  unroll_len: 1
  [data_conf] {
    backend: "kvfile"
    path: "examples/dpm/train_input_data.bin"
    label_path: "examples/dpm/train_label_data.bin"
    batchsize: 1
    unroll_len: 10
    feature_len: 598
  }
  include: kTrain
}

layer {
  name: "data"
  user_type: "kData"
  unroll_len: 1
  [data_conf] {
    backend: "kvfile"
    path: "examples/dpm/test_input_data.bin"
    label_path: "examples/dpm/test_label_data.bin"
    batchsize: 1
    unroll_len: 10
    feature_len: 598
  }
  include: kTest
}

layer {
  name: "unroll"
  user_type: "kUnrollV2"
  srclayers: "data"
  unroll_conn_type: kUnrollOneToAll
}

  layer {
    name: "gru"
    user_type: "kDPMGru"
    srclayers: "unroll"
    [dpmgru_conf] {
      dim_hidden: 1024
    }
    param {
      name: "z_hx"
      init {
        type: kUniform
        low: -0.08
        high: 0.08
      }
    }
    param {
      name: "r_hx"
      init {
        type: kUniform
        low: -0.08
        high: 0.08
      }
    }
    param {
      name: "c_hx"
      init {
        type: kUniform
        low: -0.08
        high: 0.08
      }
    }
    param {
      name: "z_hh"
      init {
        type: kUniform
        low: -0.08
        high: 0.08
      }
    }
    param {
      name: "r_hh"
      init {
        type: kUniform
        low: -0.08
        high: 0.08
      }
    }
    param {
      name: "c_hh"
      init {
        type: kUniform
        low: -0.08
        high: 0.08
      }
    }
    param {
      name: "weight_theta"
      init {
        type: kUniform
        low: -0.08
        high: 0.08
      }
    }
    param {
      name: "z_b"
      init {
        type: kUniform
        low: -0.08
        high: 0.08
      }
    }
    param {
      name: "r_b"
      init {
        type: kUniform
        low: -0.08
        high: 0.08
      }
    }
    param {
      name: "c_b"
      init {
        type: kUniform
        low: -0.08
        high: 0.08
      }
    }
    param {
      name: "bias_theta"
      init {
        type: kUniform
        low: -0.08
        high: 0.08
      }
    }
    is_dpmgru: true
  }

  layer {
    name: "label"
    user_type: "kDPMLabel"
    srclayers: "data"
    unroll_len: 1
  }

  layer {
    name: "time"
    user_type: "kDPMTime"
    srclayers: "data"
    unroll_len: 1
  }


  layer {
    name: "combination"
    user_type: "kCombination"
    srclayers: "gru"
    srclayers: "time"
    unroll_len: 1
    unroll_conn_type: kUnrollFirstToLast
    [combination_conf] {
      num_output:20
    }
    param {
      name: "whc"
      init {
        type: kUniform
        low: -0.05
        high: 0.05
      }
    }
    param {
      name: "alpha"
      init {
        type: kUniform
        low: -0.05
        high: 0.05
      }
    }
    param {
      name: "bhc"
      init {
        type: kUniform
        low: -0.05
        high: 0.05
      }
    }
  }

  layer {
    name: "tanh"
    type: kSTanh
    srclayers: "combination"
    unroll_len: 1
  }

  layer {
    name: "fc"
    type: kInnerProduct
    srclayers: "tanh"
    unroll_len: 1
    innerproduct_conf {
      num_output:1
    }
    param {
      name: "beta"
      init {
        type: kUniform
        low: -0.05
        high: 0.05
      }
    }
    param {
      name: "b"
      init {
        type: kUniform
        low: -0.05
        high: 0.05
      }
    }
  }


  layer {
    name: "loss"
    type: kEuclideanLoss
    srclayers: "fc"
    srclayers: "label"
    unroll_len: 1
  }

}

cluster {
  nworker_groups: 1
  nserver_groups: 1
  nservers_per_group: 1
  nworkers_per_group: 1
  nservers_per_procs: 1
  nworkers_per_procs: 1
  workspace: "examples/dpm/"
}
