cluster {
  nworker_groups: 1
  nserver_groups: 1
  nservers_per_group: 1
  nworkers_per_group: 1
  nservers_per_procs: 1
  nworkers_per_procs: 1
  workspace: "examples/rnnlm/" 
}

name: "recurrent-neural-network-language-model"
#To scan the training file (71350) 30 times
train_steps:214050
#To scan the validation file (5829) once
test_steps:583
test_freq:7135
#disp_freq is specific to training
disp_freq:7135

train_one_batch {
  alg: kBP
}

updater{
   type: kSGD
   #weight_decay:0.0000001
   learning_rate {
      type: kFixedStep
      fixedstep_conf:{
      step:0
      step:42810
      step:49945
      step:57080
      step:64215
      step_lr:0.1
      step_lr:0.05
      step_lr:0.025
      step_lr:0.0125
      step_lr:0.00625
      }
   }
}

neuralnet {
layer {
  name: "data"
  user_type: "kRnnData"
  [singa.input_conf] {
    path: "examples/rnnlm/train_shard"
    max_window: 10
  }
  exclude: kTest
}

layer {
  name: "data"
  user_type: "kRnnData"
  [singa.input_conf] {
    path: "examples/rnnlm/test_shard"
    max_window: 10
  }
  exclude: kTrain
}

layer{
  name:"wordlayer"
  user_type: "kWord"
  srclayers: "data"
}

layer{
  name:"labellayer"
  user_type: "kRnnLabel"
  srclayers: "data"
}

layer{
  name: "embeddinglayer"
  user_type: "kEmbedding"
  [singa.embedding_conf] {
    word_dim: 15
    vocab_size: 3720
  }
  srclayers: "wordlayer"
    param {
    name: "w1"
    init {
       type: kUniform
       low:-0.3
       high:0.3
    }
  }
}

layer{
  name: "hiddenlayer"
  user_type: "kHidden"
  srclayers:"embeddinglayer"
  param{
    name: "w2"
    init {
      type: kUniform
      low:-0.3
      high:0.3
    }
  }
}
layer{
  name: "outputlayer"
  user_type: "kOutput"
  srclayers:"hiddenlayer"
  srclayers:"labellayer"
  [singa.output_conf] {
    nclass:100
    vocab_size: 3720
  }
  param{
    name: "w3" 
    init {
      type: kUniform
      low:-0.3
      high:0.3
    }
  }
  param{
    name: "w4"
    init {
      type: kUniform
      low:-0.3
      high:0.3
    }
  }
}

}

